{"version":3,"sources":["components/Statistics/styled.js","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Container","styled","div","Section","section","Title","h1","StatList","ul","StatItem","li","props","bckg","StatLabel","span","StatPercentage","getRandomInt","min","max","Math","ceil","floor","random","Statistics","title","stats","map","item","index","label","percentage","id","defaultProps","App","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kfAEaA,EAAYC,IAAOC,IAAV,sKAQTC,EAAUF,IAAOG,QAAV,gJAOPC,EAAQJ,IAAOK,GAAV,gIAOLC,EAAWN,IAAOO,GAAV,oEAKRC,EAAWR,IAAOS,GAAV,mUACE,SAACC,GAAD,OAAWA,EAAMC,QAiB3BC,EAAYZ,IAAOa,KAAV,iDAITC,EAAiBd,IAAOa,KAAV,iD,OC9C3B,SAASE,EAAaC,EAAKC,GAGzB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,IAAQA,EAGnD,IAAMM,EAAa,SAACZ,GAChB,IAAQa,EAAiBb,EAAjBa,MAAOC,EAAUd,EAAVc,MAGf,OACI,cAAC,EAAD,UACI,eAAC,EAAD,WACKD,GACG,cAAC,EAAD,UACKA,IAGT,cAAC,EAAD,UACKC,EAAMC,KAAI,SAACC,EAAMC,GAAP,OAEP,cADA,CACC,EAAD,CAEIhB,KAAI,cAASI,EAAa,EAAG,KAAzB,2CACFA,EAAa,EAAG,KADd,2CAEFA,EAAa,EAAG,KAFd,mCAGF,GAHE,KAFR,UAOI,cAAC,EAAD,UACKW,EAAKE,QAEV,eAAC,EAAD,WACKF,EAAKG,WADV,SATKH,EAAKI,eAoBtCR,EAAWS,aAAe,CACtBR,MAAO,kBAcID,Q,QCrDAU,MAJf,WACG,OAAO,cAAC,EAAD,CAAYT,MAAM,eAAeC,MAAOS,K,MCClDC,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.b00df763.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n   max-width: 768px;\r\n   margin: 0 auto;\r\n   min-height: 100vh;\r\n   display: flex;\r\n   justify-content: center;\r\n   align-items: center;\r\n`;\r\nexport const Section = styled.section`\r\n   padding-top: 15px;\r\n   width: 350px;\r\n   background-color: #fff;\r\n   display: flex;\r\n   flex-direction: column;\r\n`;\r\nexport const Title = styled.h1`\r\n   text-align: center;\r\n   text-transform: uppercase;\r\n   min-height: 70px;\r\n   line-height: 65px;\r\n`;\r\n\r\nexport const StatList = styled.ul`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n`;\r\n\r\nexport const StatItem = styled.li`\r\n   background-color: ${(props) => props.bckg};\r\n   padding: 10px;\r\n   width: 25%;\r\n   display: flex;\r\n   flex-direction: column;\r\n   justify-content: center;\r\n   align-items: center;\r\n   color: #fff;\r\n   &:last-child {\r\n      width: 100%;\r\n   }\r\n   span {\r\n      margin-bottom: 3px;\r\n      font-weight: bold;\r\n   }\r\n`;\r\n\r\nexport const StatLabel = styled.span`\r\n   font-size: 14px;\r\n`;\r\n\r\nexport const StatPercentage = styled.span`\r\n   font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Styled from './styled';\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\r\n}\r\n\r\nconst Statistics = (props) => {\r\n    const { title, stats } = props;\r\n    // const bckg = [\"red\", \"green\", \"yellow\", \"blue\", \"purple\"];\r\n\r\n    return (\r\n        <Styled.Container>\r\n            <Styled.Section>\r\n                {title &&\r\n                    <Styled.Title>\r\n                        {title}\r\n                    </Styled.Title>\r\n                }\r\n                <Styled.StatList>\r\n                    {stats.map((item, index) => (\r\n                        // <Styled.StatItem key={item.id} bckg={bckg[index]}>\r\n                        <Styled.StatItem\r\n                            key={item.id}\r\n                            bckg={`rgb(${getRandomInt(0, 255)}, \r\n                            ${getRandomInt(0, 255)}, \r\n                            ${getRandomInt(0, 255)}, \r\n                            ${0.8})`\r\n                            }>\r\n                            <Styled.StatLabel>\r\n                                {item.label}\r\n                            </Styled.StatLabel>\r\n                            <Styled.StatPercentage>\r\n                                {item.percentage}%\r\n                            </Styled.StatPercentage>\r\n                        </Styled.StatItem>\r\n                    ))}\r\n                </Styled.StatList>\r\n            </Styled.Section>\r\n        </Styled.Container>\r\n    )\r\n};\r\n\r\nStatistics.defaultProps = {\r\n    title: 'Statistic Data'\r\n};\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        })\r\n    )\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\n\nimport Statistics from './components/Statistics';\nimport statisticalData from './mocks/statisticalData.json';\n\nfunction App() {\n   return <Statistics title=\"Upload stats\" stats={statisticalData} />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}